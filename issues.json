[

  {
    "url": "https://api.github.com/repos/ietf-rats/draft-birkholz-rats-basic-yang-module/issues/4",
    "repository_url": "https://api.github.com/repos/ietf-rats/draft-birkholz-rats-basic-yang-module",
    "labels_url": "https://api.github.com/repos/ietf-rats/draft-birkholz-rats-basic-yang-module/issues/4/labels{/name}",
    "comments_url": "https://api.github.com/repos/ietf-rats/draft-birkholz-rats-basic-yang-module/issues/4/comments",
    "events_url": "https://api.github.com/repos/ietf-rats/draft-birkholz-rats-basic-yang-module/issues/4/events",
    "html_url": "https://github.com/ietf-rats/draft-birkholz-rats-basic-yang-module/pull/4",
    "id": 464424403,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjk0NzA2MjY1",
    "number": 4,
    "title": "To address comments from @Xialiang",
    "user": {
      "login": "shwethab",
      "id": 1716447,
      "node_id": "MDQ6VXNlcjE3MTY0NDc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1716447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shwethab",
      "html_url": "https://github.com/shwethab",
      "followers_url": "https://api.github.com/users/shwethab/followers",
      "following_url": "https://api.github.com/users/shwethab/following{/other_user}",
      "gists_url": "https://api.github.com/users/shwethab/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shwethab/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shwethab/subscriptions",
      "organizations_url": "https://api.github.com/users/shwethab/orgs",
      "repos_url": "https://api.github.com/users/shwethab/repos",
      "events_url": "https://api.github.com/users/shwethab/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shwethab/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-07-05T01:12:05Z",
    "updated_at": "2019-07-08T09:05:45Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ietf-rats/draft-birkholz-rats-basic-yang-module/pulls/4",
      "html_url": "https://github.com/ietf-rats/draft-birkholz-rats-basic-yang-module/pull/4",
      "diff_url": "https://github.com/ietf-rats/draft-birkholz-rats-basic-yang-module/pull/4.diff",
      "patch_url": "https://github.com/ietf-rats/draft-birkholz-rats-basic-yang-module/pull/4.patch"
    },
    "body": "module: ietf-basic-remote-attestation\r\n  +--ro rats-support-structures\r\n     +--ro supported-algos*            uint16\r\n     +--ro tpms* [tpm_name]      //is version info needed here?\r\n     |  +--ro tpm_name              string\r\n     |  +--ro tpm-physical-index?   int32 {ietfhw:entity-mib}?\r\n     +--ro compute-nodes* [node-name]  \r\n     |  +--ro node-name              string\r\n     |  +--ro node-physical-index?   int32 {ietfhw:entity-mib}?\r\n     +--ro endorsement-certificates       //Is this the TCG specified EK certificate, or AK used here for RA, or a unified one? Is it better to move this under the respective tpm_name in tpms above, and delete this structure?\r\n\r\n[SB]Good idea. Done\r\nThe certs are TPM specific makes sense to group them under tpm\r\n\r\n        +--ro certificate* [tpm_name]\r\n           +--ro tpm_name                   string\r\n           +--ro tpm-physical-index?        int32 {ietfhw:entity-mib}?\r\n           +--ro endorsement-certificate    binary\r\n \r\n  rpcs:\r\n    +---x tpm12-challenge-response-attestation\r\n    |  +---w input\r\n    |  |  +---w tpm1-attestation-challenge\r\n    |  |     +---w pcr-indices*            uint8 \r\n    |  |     +---w nonce-value             binary\r\n    |  |     +---w TPM_SIG_SCHEME-value    uint8       \r\n    |  |     +---w (key-identifier)?\r\n    |  |     |  +--:(public-key)\r\n    |  |     |  |  +---w pub-key-id?       binary\r\n    |  |     |  +--:(TSS_UUID)\r\n    |  |     |     +---w TSS_UUID-value\r\n    |  |     |        +---w ulTimeLow?       uint32\r\n    |  |     |        +---w usTimeMid?       uint16\r\n    |  |     |        +---w usTimeHigh?      uint16\r\n    |  |     |        +---w bClockSeqHigh?   uint8\r\n    |  |     |        +---w bClockSeqLow?    uint8\r\n    |  |     |        +---w rgbNode*         uint8\r\n    |  |     +---w add-version?            boolean\r\n    |  |     +---w tpm_name?               string\r\n    |  |     +---w tpm-physical-index?     int32 {ietfhw:entity-mib}?\r\n    |  +--ro output\r\n    |     +--ro tpm12-attestation-response* [tpm_name]\r\n    |        +--ro tpm_name                     string\r\n    |        +--ro tpm-physical-index?          int32 {ietfhw:entity-mib}?\r\n    |        +--ro up-time?                     uint32\r\n    |        +--ro node-name?                   string\r\n    |        +--ro node-physical-index?         int32 {ietfhw:entity-mib}?\r\n    |        +--ro (tpm12-quote)\r\n    |           +--:(tpm12-quote) \r\n    |           |  +--ro version* []\r\n    |           |  |  +--ro major?      uint8\r\n    |           |  |  +--ro minor?      uint8\r\n    |           |  |  +--ro revMajor?   uint8\r\n    |           |  |  +--ro revMinor?   uint8\r\n    |           |  +--ro fixed?                 binary\r\n    |           |  +--ro digest-value?          binary\r\n    |           |  +--ro external-data?         binary\r\n    |           |  +--ro TPM_PCR_COMPOSITE* []\r\n    |           |  |  +--ro pcr-indices*       uint8\r\n    |           |  |  +--ro value-size?        uint32\r\n    |           |  |  +--ro tpm12-pcr-value*   binary\r\n    |           |  +--ro signature-size?        uint32\r\n    |           |  +--ro signature?             binary\r\n    |           +--:(tpm12-quote2) \r\n    |              +--ro tag?                   uint8\r\n    |              +--ro fixed?                 binary\r\n    |              +--ro external-data?         binary\r\n    |              +--ro pcr-indices*           uint8\r\n    |              +--ro locality-at-release?   uint8\r\n    |              +--ro digest-at-release?     binary\r\n    |              +--ro signature-size?        uint32\r\n    |              +--ro signature?             binary\r\n    +---x tpm2-challenge-response-attestation\r\n    |  +---w input\r\n    |  |  +---w tpm2-attestation-challenge    //should we consider supporting multiple tpms in one challenge-response interaction? And the output below has already multiple tpms~~\r\n\r\n[SB] Right. Addressed.\r\n\r\n    |  |  |  +---w pcr-list* []    //this is an array of array of PCRs, why do you design in this way?\r\n[SB] how else? We need multiple PCRs to be selected for attestation.\r\n    |  |  |  |  +---w pcr\r\n    |  |  |  |     +---w pcr-indices*                  uint8\r\n    |  |  |  |     +---w (algo-registry-type)\r\n    |  |  |  |        +--:(tcg)\r\n    |  |  |  |        |  +---w tcg-hash-algo-id?       uint16\r\n    |  |  |  |        +--:(ietf)\r\n    |  |  |  |           +---w ietf-ni-hash-algo-id?   uint8\r\n    |  |  |  +---w nonce-value                   binary\r\n    |  |  |  +---w (signature-identifier-type)  \r\n    |  |  |  |  +--:(TPM_ALG_ID)\r\n    |  |  |  |  |  +---w TPM_ALG_ID-value?       uint16\r\n    |  |  |  |  +--:(COSE_Algorithm)\r\n    |  |  |  |     +---w COSE_Algorithm-value?   int32\r\n    |  |  |  +---w (key-identifier)?   \r\n    |  |  |     +--:(public-key)\r\n    |  |  |     |  +---w pub-key-id?             binary\r\n    |  |  |     +--:(uuid)\r\n    |  |  |        +---w uuid-value?             binary        \r\n    |  |  +---w tpm_name?                     string             \r\n    |  |  +---w tpm-physical-index?           int32 {ietfhw:entity-mib}?      \r\n    |  +--ro output\r\n    |     +--ro tpm2-attestation-response* [tpm_name] \r\n    |        +--ro tpm_name               string\r\n    |        +--ro tpm-physical-index?    int32 {ietfhw:entity-mib}?\r\n    |        +--ro up-time?               uint32\r\n    |        +--ro node-name?             string\r\n    |        +--ro node-physical-index?   int32 {ietfhw:entity-mib}?\r\n    |        +--ro tpms-attest             \r\n    |        |  +--ro pcrdigest?                   binary\r\n    |        |  +--ro tpms-attest-result?          binary\r\n    |        |  +--ro tpms-attest-result-length?   uint32\r\n    |        +--ro tpmt-signature?        binary    //is signature-length missed here?\r\n[SB] No, it is binary the wire encapsulation of the model will have a way to frame it and indicate the length. IT doesnt have to be explicit.\r\n\r\n    +---x basic-trust-establishment          //So, this rpc is used once before the attestation process for trust establishment and certificate & key-identifier exchange? If so, it is still tpm2.0 specific, I assume we need one for tpm1.2, too.\r\n[SB] How will it be different for TPM1.2? This RPC fetches the AIK certificate that can be validated and then used for verifying attested data.\r\n\r\n    |  +---w input\r\n    |  |  +---w nonce-value                   binary     \r\n    |  |  +---w (signature-identifier-type) \r\n    |  |  |  +--:(TPM_ALG_ID)\r\n    |  |  |  |  +---w TPM_ALG_ID-value?       uint16\r\n    |  |  |  +--:(COSE_Algorithm)\r\n    |  |  |     +---w COSE_Algorithm-value?   int32\r\n    |  |  +---w tpm_name?                     string\r\n    |  |  +---w tpm-physical-index?           int32 {ietfhw:entity-mib}?\r\n    |  |  +---w certificate-name?             string          //how does the verifier know the existing certificate names in advance? The \"rats-support-structures\" above only provides the EK certificate, not AK.\r\n\r\n[SB] rats-support-structures provides all the unique certs for the TPM. Should provide both EK and AK.\r\n\r\n    |  +--ro output\r\n    |     +--ro attestation-certificates* [tpm_name]    // challenge message has only one tpm_name, why are there multiple tpm’s response here?\r\n\r\n[SB] updated the input. We did have the input selection based on compute node name earlier. But i think it didnt make it to the draft model.\r\n\r\n    |        +--ro tpm_name                   string\r\n    |        +--ro tpm-physical-index?        int32 {ietfhw:entity-mib}?\r\n    |        +--ro up-time?                   uint32\r\n    |        +--ro node-name?                 string\r\n    |        +--ro node-physical-index?       int32 {ietfhw:entity-mib}?\r\n    |        +--ro certificate-name?          string\r\n    |        +--ro attestation-certificate?   ietfct:end-entity-cert-cms     //Same problem, what and where is AK certificate?\r\n[SB] updated the description in rats-support-structure\r\n\r\n    |        +--ro (key-identifier)?           //should here consider the TPM 1.2 TSS_UUID option? If we can use this RPC for TPM2.0 and TPM1.2 both, that should be added here. If not, it goes in an corresponding TPM1.2 RPC, analogously.\r\n\r\n[SB] This can be considered.\r\n\r\n    |           +--:(public-key)\r\n    |           |  +--ro pub-key-id?          binary\r\n    |           +--:(uuid)\r\n    |              +--ro uuid-value?          binary\r\n    +---x log-retrieval \r\n       +---w input\r\n       |  +---w log-selector* [node-name]\r\n       |  |  +---w node-name                 string\r\n       |  |  +---w node-physical-index?      int32 {ietfhw:entity-mib}?\r\n       |  |  +---w (index-type)?\r\n       |  |     +--:(last-entry)\r\n       |  |     |  +---w last-entry-value?   binary\r\n       |  |     +--:(index)\r\n       |  |     |  +---w index-number?       uint64\r\n       |  |     +--:(timestamp)\r\n       |  |        +---w timestamp?          yang:date-and-time\r\n       |  +---w log-type              identityref\r\n       |  +---w pcr-list* []      //this is an array of array of PCRs, why do you design in this way?\r\n[SB] Can you please propose an alternate that you have in mind? It is a list so we can represent multiple PCR in the selection.\r\n\r\n       |  |  +---w pcr\r\n       |  |     +---w pcr-indices*                  uint8\r\n       |  |     +---w (algo-registry-type)\r\n       |  |        +--:(tcg)\r\n       |  |        |  +---w tcg-hash-algo-id?       uint16\r\n       |  |        +--:(ietf)\r\n       |  |           +---w ietf-ni-hash-algo-id?   uint8\r\n       |  +---w log-entry-quantity?   uint16\r\n       +--ro output\r\n          +--ro system-event-logs\r\n             +--ro node-data* [node-name]\r\n                +--ro node-name              string\r\n                +--ro node-physical-index?   int32 {ietfhw:entity-mib}?\r\n                +--ro up-time?               uint32\r\n                +--ro tpm-updated* [tpm_name]         //so, does it mean that there are possibly multiple tpms in one node? If so, how to use the PCR values of them together to verify the log integrity?\r\n\r\n[SB] You are right, The logs only which PCR index was extended. So it makes sense to organize the logs with node-name,tpm_name as the key. If a node has multiple TPMs it would extend the PCR and maintain logs separately per TPM from my experience. Bill, Eric, Henk is this right?\r\n\r\n                |  +--ro tpm_name              string\r\n                |  +--ro tpm-physical-index?   int32 {ietfhw:entity-mib}?\r\n                +--ro log-result\r\n                   +--ro (log-type)\r\n                      +--:(bios)\r\n                      |  +--ro bios-event-logs\r\n                      |     +--ro bios-event-entry* [event-number]\r\n                      |        +--ro event-number    uint32\r\n                      |        +--ro event-type?     uint32\r\n                      |        +--ro pcr-index?      uint16         //should this be the pcr-value\r\n[SB] No it is pcr-index. The logs tell which pcr is extended. the digest will indicate the hash that was extended into this pcr.\t\t      \r\n                      |        +--ro digest-list* []    \r\n                      |        |  +--ro (algo-registry-type)\r\n                      |        |  |  +--:(tcg)\r\n                      |        |  |  |  +--ro tcg-hash-algo-id?       uint16\r\n                      |        |  |  +--:(ietf)\r\n                      |        |  |     +--ro ietf-ni-hash-algo-id?   uint8\r\n                      |        |  +--ro digest*                       binary\r\n                      |        +--ro event-size?     uint32\r\n                      |        +--ro event-data*     uint8\r\n                      +--:(ima)\r\n                         +--ro ima-event-logs\r\n                            +--ro ima-event-entry* [event-number]\r\n                               +--ro event-number               uint64\r\n                               +--ro ima-template?              string\r\n                               +--ro filename-hint?             string\r\n                               +--ro filedata-hash?             binary\r\n                               +--ro template-hash-algorithm?   string\r\n                               +--ro template-hash?             binary\r\n                               +--ro pcr-index?                 uint16    //should this be the pcr-value?\r\n[SB] No it is pcr-index. The logs tell which pcr is extended. the digest will indicate the hash that was extended into this pcr.\t\t      \r\n    \t\t\t       \r\n                               +--ro signature?  "
  },
  {
    "url": "https://api.github.com/repos/ietf-rats/draft-birkholz-rats-basic-yang-module/issues/3",
    "repository_url": "https://api.github.com/repos/ietf-rats/draft-birkholz-rats-basic-yang-module",
    "labels_url": "https://api.github.com/repos/ietf-rats/draft-birkholz-rats-basic-yang-module/issues/3/labels{/name}",
    "comments_url": "https://api.github.com/repos/ietf-rats/draft-birkholz-rats-basic-yang-module/issues/3/comments",
    "events_url": "https://api.github.com/repos/ietf-rats/draft-birkholz-rats-basic-yang-module/issues/3/events",
    "html_url": "https://github.com/ietf-rats/draft-birkholz-rats-basic-yang-module/pull/3",
    "id": 369487859,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjIyNDE3Mzkz",
    "number": 3,
    "title": "Updates location and addresses Bill's comments",
    "user": {
      "login": "shwethab",
      "id": 1716447,
      "node_id": "MDQ6VXNlcjE3MTY0NDc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1716447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shwethab",
      "html_url": "https://github.com/shwethab",
      "followers_url": "https://api.github.com/users/shwethab/followers",
      "following_url": "https://api.github.com/users/shwethab/following{/other_user}",
      "gists_url": "https://api.github.com/users/shwethab/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shwethab/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shwethab/subscriptions",
      "organizations_url": "https://api.github.com/users/shwethab/orgs",
      "repos_url": "https://api.github.com/users/shwethab/repos",
      "events_url": "https://api.github.com/users/shwethab/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shwethab/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-10-12T10:13:13Z",
    "updated_at": "2018-10-22T05:37:09Z",
    "closed_at": "2018-10-22T05:37:07Z",
    "author_association": "COLLABORATOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ietf-rats/draft-birkholz-rats-basic-yang-module/pulls/3",
      "html_url": "https://github.com/ietf-rats/draft-birkholz-rats-basic-yang-module/pull/3",
      "diff_url": "https://github.com/ietf-rats/draft-birkholz-rats-basic-yang-module/pull/3.diff",
      "patch_url": "https://github.com/ietf-rats/draft-birkholz-rats-basic-yang-module/pull/3.patch"
    },
    "body": "This is following up on the discussion b/n Henk, Eric, Bill, Shwetha to:\r\n1. Replace location of a node / TPM within a composite system with tpm-name/node-name and Physical-index of the component (compute node or tpm-name) as specified in EntityMIB.\r\n2. basic trust establishment is updated to request a specific identity cert chain and return signed identity cert chain.\r\n3. Removed reference to PCR selector in basic trust establishment\r\n4. Added timestamp in log-retrieval\r\n5. Renamed chunk-size in log-retrieval request to  log-entry-quantity \r\n6. Imported ietf-crypto-types for the signed certificate typedef\r\n7.  Imported ietf-hardware for EntityMIB physical-index reference\r\nietf-crypto-types and \r\nA few more nits."
  },
  {
    "url": "https://api.github.com/repos/ietf-rats/draft-birkholz-rats-basic-yang-module/issues/2",
    "repository_url": "https://api.github.com/repos/ietf-rats/draft-birkholz-rats-basic-yang-module",
    "labels_url": "https://api.github.com/repos/ietf-rats/draft-birkholz-rats-basic-yang-module/issues/2/labels{/name}",
    "comments_url": "https://api.github.com/repos/ietf-rats/draft-birkholz-rats-basic-yang-module/issues/2/comments",
    "events_url": "https://api.github.com/repos/ietf-rats/draft-birkholz-rats-basic-yang-module/issues/2/events",
    "html_url": "https://github.com/ietf-rats/draft-birkholz-rats-basic-yang-module/pull/2",
    "id": 334751562,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTk2NjQxNzAx",
    "number": 2,
    "title": "Typos, location and log selector fixes",
    "user": {
      "login": "shwethab",
      "id": 1716447,
      "node_id": "MDQ6VXNlcjE3MTY0NDc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1716447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shwethab",
      "html_url": "https://github.com/shwethab",
      "followers_url": "https://api.github.com/users/shwethab/followers",
      "following_url": "https://api.github.com/users/shwethab/following{/other_user}",
      "gists_url": "https://api.github.com/users/shwethab/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shwethab/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shwethab/subscriptions",
      "organizations_url": "https://api.github.com/users/shwethab/orgs",
      "repos_url": "https://api.github.com/users/shwethab/repos",
      "events_url": "https://api.github.com/users/shwethab/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shwethab/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-06-22T05:35:18Z",
    "updated_at": "2018-06-22T06:13:58Z",
    "closed_at": "2018-06-22T06:13:58Z",
    "author_association": "COLLABORATOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ietf-rats/draft-birkholz-rats-basic-yang-module/pulls/2",
      "html_url": "https://github.com/ietf-rats/draft-birkholz-rats-basic-yang-module/pull/2",
      "diff_url": "https://github.com/ietf-rats/draft-birkholz-rats-basic-yang-module/pull/2.diff",
      "patch_url": "https://github.com/ietf-rats/draft-birkholz-rats-basic-yang-module/pull/2.patch"
    },
    "body": "Signed-off-by: shwethab <shwethab@cisco.com>"
  },
  {
    "url": "https://api.github.com/repos/ietf-rats/draft-birkholz-rats-basic-yang-module/issues/1",
    "repository_url": "https://api.github.com/repos/ietf-rats/draft-birkholz-rats-basic-yang-module",
    "labels_url": "https://api.github.com/repos/ietf-rats/draft-birkholz-rats-basic-yang-module/issues/1/labels{/name}",
    "comments_url": "https://api.github.com/repos/ietf-rats/draft-birkholz-rats-basic-yang-module/issues/1/comments",
    "events_url": "https://api.github.com/repos/ietf-rats/draft-birkholz-rats-basic-yang-module/issues/1/events",
    "html_url": "https://github.com/ietf-rats/draft-birkholz-rats-basic-yang-module/pull/1",
    "id": 334586947,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTk2NTIyODgx",
    "number": 1,
    "title": "Modified the model and added new co-authors",
    "user": {
      "login": "shwethab",
      "id": 1716447,
      "node_id": "MDQ6VXNlcjE3MTY0NDc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1716447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shwethab",
      "html_url": "https://github.com/shwethab",
      "followers_url": "https://api.github.com/users/shwethab/followers",
      "following_url": "https://api.github.com/users/shwethab/following{/other_user}",
      "gists_url": "https://api.github.com/users/shwethab/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shwethab/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shwethab/subscriptions",
      "organizations_url": "https://api.github.com/users/shwethab/orgs",
      "repos_url": "https://api.github.com/users/shwethab/repos",
      "events_url": "https://api.github.com/users/shwethab/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shwethab/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-06-21T17:25:19Z",
    "updated_at": "2018-06-21T17:31:08Z",
    "closed_at": "2018-06-21T17:31:08Z",
    "author_association": "COLLABORATOR",
    "pull_request": {
      "url": "https://api.github.com/repos/ietf-rats/draft-birkholz-rats-basic-yang-module/pulls/1",
      "html_url": "https://github.com/ietf-rats/draft-birkholz-rats-basic-yang-module/pull/1",
      "diff_url": "https://github.com/ietf-rats/draft-birkholz-rats-basic-yang-module/pull/1.diff",
      "patch_url": "https://github.com/ietf-rats/draft-birkholz-rats-basic-yang-module/pull/1.patch"
    },
    "body": "    1. to have structured event data result based on event type\r\n    2. Support for a system with multiple nodes each with its own TPM\r\nUpdated author list\r\n\r\nSigned-off-by: shwethab <shwethab@cisco.com>"
  }

]
